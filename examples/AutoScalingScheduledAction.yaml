# autostacker24 CloudFormation YAML template
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template AutoScalingScheduledAction: Create
  a load balanced, Auto Scaled sample website. This example creates an Auto Scaling
  group with time-based scheduled actions behind a load balancer with a simple health
  check. **WARNING** This template creates one or more Amazon EC2 instances and an
  Elastic Load Balancer. You will be billed for the AWS resources used if you create
  a stack from this template.'
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues: [ t1.micro, t2.nano, t2.micro, t2.small, t2.medium, t2.large, m1.small, m1.medium, m1.large, m1.xlarge, m2.xlarge, m2.2xlarge, m2.4xlarge, m3.medium, m3.large, m3.xlarge, m3.2xlarge, m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge, c1.medium, c1.xlarge, c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge, c3.8xlarge, c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, g2.2xlarge, g2.8xlarge, r3.large, r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge, i2.xlarge, i2.2xlarge, i2.4xlarge, i2.8xlarge, d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge, hi1.4xlarge, hs1.8xlarge, cr1.8xlarge, cc2.8xlarge, cg1.4xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  Region2Examples:
    Examples:
      us-east-1:      https://s3.amazonaws.com/cloudformation-examples-us-east-1
      us-west-2:      https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2
      us-west-1:      https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1
      eu-west-1:      https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1
      eu-central-1:   https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1
      ap-northeast-1: https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1
      ap-southeast-1: https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1
      ap-southeast-2: https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2
      ap-northeast-2: https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2
      cn-north-1:     https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1
      sa-east-1:      https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1
  AWSInstanceType2Arch:
    Arch:
      t1.micro:     PV64
      t2.nano:      HVM64
      t2.micro:     HVM64
      t2.small:     HVM64
      t2.medium:    HVM64
      t2.large:     HVM64
      m1.small:     PV64
      m1.medium:    PV64
      m1.large:     PV64
      m1.xlarge:    PV64
      m2.xlarge:    PV64
      m2.2xlarge:   PV64
      m2.4xlarge:   PV64
      m3.medium:    HVM64
      m3.large:     HVM64
      m3.xlarge:    HVM64
      m3.2xlarge:   HVM64
      m4.large:     HVM64
      m4.xlarge:    HVM64
      m4.2xlarge:   HVM64
      m4.4xlarge:   HVM64
      m4.10xlarge:  HVM64
      c1.medium:    PV64
      c1.xlarge:    PV64
      c3.large:     HVM64
      c3.xlarge:    HVM64
      c3.2xlarge:   HVM64
      c3.4xlarge:   HVM64
      c3.8xlarge:   HVM64
      c4.large:     HVM64
      c4.xlarge:    HVM64
      c4.2xlarge:   HVM64
      c4.4xlarge:   HVM64
      c4.8xlarge:   HVM64
      g2.2xlarge:   HVMG2
      g2.8xlarge:   HVMG2
      r3.large:     HVM64
      r3.xlarge:    HVM64
      r3.2xlarge:   HVM64
      r3.4xlarge:   HVM64
      r3.8xlarge:   HVM64
      i2.xlarge:    HVM64
      i2.2xlarge:   HVM64
      i2.4xlarge:   HVM64
      i2.8xlarge:   HVM64
      d2.xlarge:    HVM64
      d2.2xlarge:   HVM64
      d2.4xlarge:   HVM64
      d2.8xlarge:   HVM64
      hi1.4xlarge:  HVM64
      hs1.8xlarge:  HVM64
      cr1.8xlarge:  HVM64
      cc2.8xlarge:  HVM64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-5fb8c835
      HVM64: ami-60b6c60a
      HVMG2: ami-e998ea83
    us-west-2:
      PV64: ami-d93622b8
      HVM64: ami-f0091d91
      HVMG2: ami-315f4850
    us-west-1:
      PV64: ami-56ea8636
      HVM64: ami-d5ea86b5
      HVMG2: ami-943956f4
    eu-west-1:
      PV64: ami-95e33ce6
      HVM64: ami-bff32ccc
      HVMG2: ami-83fd23f0
    eu-central-1:
      PV64: ami-794a5915
      HVM64: ami-bc5b48d0
      HVMG2: ami-ba1a09d6
    ap-northeast-1:
      PV64: ami-393c1957
      HVM64: ami-383c1956
      HVMG2: ami-08e5c166
    ap-northeast-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-249b554a
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      PV64: ami-34bd7a57
      HVM64: ami-c9b572aa
      HVMG2: ami-5a15d239
    ap-southeast-2:
      PV64: ami-ced887ad
      HVM64: ami-48d38c2b
      HVMG2: ami-0c1a446f
    sa-east-1:
      PV64: ami-7d15ad11
      HVM64: ami-6817af04
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-18ac6575
      HVM64: ami-43a36a2e
      HVMG2: NOT_SUPPORTED
Resources:
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        Fn::GetAZs: ''
      LaunchConfigurationName: "@LaunchConfig"
      MinSize: '2'
      MaxSize: '5'
      LoadBalancerNames:
      - "@ElasticLoadBalancer"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
  ScheduledActionUp:
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: "@WebServerGroup"
      MaxSize: '10'
      MinSize: '5'
      Recurrence: 0 7 * * *
  ScheduledActionDown:
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: "@WebServerGroup"
      MaxSize: '1'
      MinSize: '1'
      Recurrence: 0 19 * * *
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      Comment: Install a simple application
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          files:
            "/var/www/html/index.html":
              content: |
                <img src="@Region2Examples[Examples, @AWS::Region]/cloudformation_graphic.png" alt="AWS CloudFormation Logo"/>
                <h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1>
              mode: '000644'
              owner: root
              group: root
            "/etc/cfn/cfn-hup.conf":
              content: |
                [main]
                stack=@AWS::StackId
                region=@AWS::Region
              mode: '000400'
              owner: root
              group: root
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack @AWS::StackName --resource LaunchConfig --region @AWS::Region
                runas=root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - "/etc/cfn/cfn-hup.conf"
                - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
    Properties:
      KeyName: "@KeyName"
      ImageId: "@AWSRegionArch2AMI[@AWS::Region, @AWSInstanceType2Arch[Arch, @InstanceType]]"
      SecurityGroups: "@InstanceSecurityGroup"
      InstanceType: "@InstanceType"
      UserData: |
        #!/bin/bash -xe
        yum update -y aws-cfn-bootstrap
        /opt/aws/bin/cfn-init -v --stack @AWS::StackName --resource LaunchConfig --region @AWS::Region
        /opt/aws/bin/cfn-signal -e $? --stack @AWS::StackName --resource WebServerGroup --region @AWS::Region
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones:
        Fn::GetAZs: ''
      CrossZone: 'true'
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access and HTTP access on the configured port
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: "@SSHLocation"
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
Outputs:
  URL:
    Description: URL of the website
    Value: http://@ElasticLoadBalancer.DNSName
